#!/usr/bin/env bash

set -euo pipefail

USER="$(whoami)"

FLAGS="${@}"

MAPLE_JAR="tests/throughput/build/libs/pennaJar-0.1.jar"
LOGBACK_JAR="tests/throughput/build/libs/logbackJar-0.1.jar"
mkdir -p out
if ! mount | grep "$(git rev-parse --show-toplevel)" > /dev/null; then
  sudo mount -t ramfs -o size=1G ramfs ./out
  sudo chown -R "${USER}:${USER}" ./out
fi

# TODO Write to csv, plot the results

localdir=$(dirname "$0")

function batch() {
  TIME="${2:-10}"
  THREADS="${1:-1}"
  echo "Waiting"
  sleep 5
  echo "${TIME} / ${THREADS}"
  echo "Running penna"
  gradle -q :throughput:buildPennaJar
  perf stat java ${FLAGS} -jar "${MAPLE_JAR}" "${TIME}" "${THREADS}" > out/penna.json
  echo "Running logback"
  gradle -q :throughput:buildLogbackJar
  perf stat java ${FLAGS} -jar "${LOGBACK_JAR}" "${TIME}" "${THREADS}" > out/logback.json

  echo ""

  MAPLE_TOTAL="$(wc -l out/penna.json | cut -d ' ' -f1)"
  LOGBACK_TOTAL="$(wc -l out/logback.json | cut -d ' ' -f1)"

  echo ">> Total"
  printf "%10s %10s\n" "penna" "${MAPLE_TOTAL}"
  printf "%10s %10s\n" "logback" "${LOGBACK_TOTAL}"
  echo ""
  echo ">> logs/ms"
  printf "%10s %10s\n" "penna" "$(python -c "print($MAPLE_TOTAL / $TIME)")"
  printf "%10s %10s\n" "logback" "$(python -c "print($LOGBACK_TOTAL / $TIME)")"
}


cd "${localdir}/.." && {
  batch 1 10000
  batch 2 10000
  batch 4 10000
  batch 8 10000

  sudo umount out
}
