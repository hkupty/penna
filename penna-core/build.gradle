import org.gradle.api.plugins.jvm.JvmTestSuite

plugins {
    id 'java-library'
    id 'penna.publishing'
    id 'signing'
    id 'penna.build.projectVersion'
    id 'pmd'
    id 'jvm-test-suite'
}

group 'com.hkupty.penna'

repositories {
    mavenCentral()
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

// Reproducible builds
tasks.withType(AbstractArchiveTask).configureEach {
    preserveFileTimestamps = false
    reproducibleFileOrder = true
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
    options.compilerArgs += [
            "-Xlint:all",
            // TODO Eventually we should enable -Werror here
            //"-Werror"
    ]

}


pmd {
    sourceSets = [sourceSets.main]
    ruleSets("category/java/performance.xml", "category/java/bestpractices.xml")
}

testing {
    suites {
        test {
            useJUnitJupiter()
        }

        propertyTesting(JvmTestSuite) {
            testType = "PropertyBasedTesting"

            dependencies {
                implementation project(":penna-api")
                implementation project()
                implementation libs.slf4j
                implementation libs.jqwik
                implementation libs.commons.math
                implementation libs.jackson.core
                implementation libs.jackson.databind
                compileOnly libs.jetbrains.annotations
            }

            targets {
                all {
                    testTask.configure {
                        shouldRunAfter(test)
                    }
                }
            }
        }
    }
}

tasks.named("check") {
    dependsOn(testing.suites.propertyTesting)
}

dependencies {
    implementation project(":penna-api")
    implementation libs.slf4j

    compileOnly libs.jetbrains.annotations

    testImplementation libs.junit.pioneer

    testRuntimeOnly libs.junit.engine
    testImplementation libs.junit.api
    testImplementation libs.jackson.core
    testImplementation libs.jackson.databind

}
