plugins {
    id 'java-library'
    id 'penna.publishing'
    id 'penna.build.projectVersion'
    id 'pmd'
}

group 'com.hkupty.penna'

pmd {
    sourceSets = [sourceSets.main]
    ruleSets("category/java/performance.xml", "category/java/bestpractices.xml", "category/java/errorprone.xml")
}

repositories {
    mavenCentral()
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

// Reproducible builds
tasks.withType(AbstractArchiveTask) {
    preserveFileTimestamps = false
    reproducibleFileOrder = true
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
    options.compilerArgs += [
            "-Xlint:all",
            // "-Xdoclint:all/public",
            "-Werror"
    ]
}

dependencies {
    implementation project(":penna-api")
    implementation project(":penna-core")
    implementation libs.slf4j

    // (optional) Jackson support
    compileOnly libs.jackson.core
    compileOnly libs.jackson.databind
    compileOnly libs.jackson.yaml
    compileOnly libs.jetbrains.annotations

    // (optional) SnakeYaml support
    compileOnly libs.snakeyaml.plain
    compileOnly libs.snakeyaml.engine

    // Tests
    testImplementation libs.junit.api
    testImplementation libs.junit.pioneer
    testRuntimeOnly libs.junit.engine
    testRuntimeOnly libs.jackson.core
    testRuntimeOnly libs.jackson.databind
    testRuntimeOnly libs.jackson.yaml
    testRuntimeOnly libs.snakeyaml.engine

    testImplementation libs.jackson.core
    testImplementation libs.jackson.databind
    testImplementation libs.jackson.yaml
}

test {
    useJUnitPlatform()
}

